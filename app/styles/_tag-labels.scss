/// Default background color for badges.
$tag-label-background: rgba(123,123,123,0.25);
$tag-label-background-darker: rgba(123,123,123,0.45);
$tag-label-background-darkUi: rgba(255,255,255,0.2);

$tag-bg-colors: (
  default: $tag-label-background,
  darker: $tag-label-background-darker,
  highlight1: scale-color($sd-colour-interactive__base, $alpha: -70%),
  highlight2: scale-color($sd-colour-interactive__base, $alpha: -35%),
);
/// Coloring classes. A map of classes to output in the CSS.
$tag-label-palette: $tag-bg-colors !default;

/// Default padding inside badges.
$tag-label-padding: 0em 1em 0em 1em !default;

/// Minimum width of a badge.
$tag-label-minwidth: 1.8em !default;

/// Default radius of a badge.
$tag-label-radius: $border-radius__base--full;

/// Default font size and line height for badges.
$tag-label-font-size: 1.4rem !default;
$tag-label-lineheight: 100% !default;


/// Generates the base styles for a badge.
@mixin tag-label {
    display: inline-flex;
    align-items: center;
    min-width: $tag-label-minwidth;
    padding: $tag-label-padding;
    border-radius: $tag-label-radius;
    font-size: $tag-label-font-size;
    line-height: $tag-label-lineheight;
    position: relative;
    text-align: center;
    font-weight: 400;
    transition: background-color .2s ease-out, opacity .1s ease-out;
    margin: 0.2rem 0;
    margin-right: 0.3rem;
    height: $sd-base-increment * 3;
    color: var(--color-text);
}

.tag-label {
    @include tag-label;
    background: $tag-label-background;

    @each $name, $color in $tag-label-palette {
        &.tag-label--#{$name} {
        background: $color;
        }
    }
    &--square {
        border-radius: $border-radius__base--x-small;
    }
    > span {
        max-width: 235px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    .tag-label__remove {
        height: 1.8rem;
        width: 1.8rem;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: inherit;
        line-height: 1;
        text-decoration: none;
        text-align: center;
        vertical-align: middle;
        border-radius: $border-radius__base--full;
        background-color: rgba(255,255,255,0.35);
        color: inherit;
        cursor: pointer;
        transition: background-color .2s ease-out, color .1s ease-out, opacity .1s ease-out;
        opacity: 0.2;
        margin-right: -1rem;
        margin-left:  0.8rem;
        i {
            font-size: 1.6rem;
            flex-grow: 0;
            flex-shrink: 0;
            margin-left: 1px;
        }
        &:hover {
            opacity: 0.75;
            text-decoration: none;
            background-color: rgba(255,255,255,0.65);
          }
          &:active {
            opacity: 1;
            background-color: rgba(255,255,255,0.85);
            [class^="icon-"], [class*=" icon-"] {
              color: $sd-colour-interactive__base;
              opacity: 1;
            }
        }
    }
}

// ----------------- SEARCH TAGS -----------------
// -----------------------------------------------


.sd-search-tags__bar {
    position: relative;
    z-index: 2;
    display: flex;
    align-items: center;
    @include sd-padding('1', 'x');
    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);
    background-color: rgba(255, 255, 255, 0.4);
}
.sd-search-tags__tag-list {
    margin: 0.6rem 0;
    &:empty {
        padding: 0 !important;
    }
    .sd-search-tags__tag {
        margin-left: 2px !important;
        margin-right: 2px !important;
    }
}
.sd-search-tags__tag-list:empty {
    padding: 0 !important;
}
.sd-search-tags__tag {
    font-size: 1.3rem;
}


[data-theme="dark-ui"] {
    .sd-search-tags__bar {
        background-color: rgba(255, 255, 255, 0.06);
    }
    .tag-label.tag-label--highlight1 {
        background: scale-color($sd-colour-interactive__base, $alpha: -50%);
    }
    .tag-label .tag-label__remove {
        background-color: rgba(0, 0, 0, 0.45);
        &:hover {
            background-color: rgba(0, 0, 0, 0.66);
        }
    }
    .tag-label .tag-label__remove i {
        color: inherit;
    }
}
